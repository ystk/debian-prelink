#! /bin/sh /usr/share/dpatch/dpatch-run
## r187.dpatch by Andrey Rahmatullin <wrar@wrar.name>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Add some new DWARF definitions from the upstream r187.

@DPATCH@

Index: prelink/src/dwarf2.c
===================================================================
--- prelink/src/dwarf2.c	(revision 186)
+++ prelink/src/dwarf2.c	(revision 187)
@@ -298,8 +298,8 @@
 }
 
 static int
-adjust_location_list (DSO *dso, unsigned char *ptr, size_t len,
-		      GElf_Addr start, GElf_Addr adjust)
+adjust_location_list (DSO *dso, struct cu_data *cu, unsigned char *ptr,
+		      size_t len, GElf_Addr start, GElf_Addr adjust)
 {
   unsigned char *end = ptr + len;
   unsigned char op;
@@ -369,9 +369,20 @@
 	case DW_OP_const4u:
 	case DW_OP_const4s:
 	case DW_OP_call4:
-	case DW_OP_call_ref:
 	  ptr += 4;
 	  break;
+	case DW_OP_call_ref:
+	  if (cu == NULL)
+	    {
+	      error (0, 0, "%s: DWARF DW_OP_call_ref shouldn't appear"
+		     " in .debug_frame", dso->filename);
+	      return 1;
+	    }
+	  if (cu->cu_version == 2)
+	    ptr += ptr_size;
+	  else
+	    ptr += 4;
+	  break;
 	case DW_OP_const8u:
 	case DW_OP_const8s:
 	  ptr += 8;
@@ -396,6 +407,19 @@
 	    ptr += len;
 	  }
 	  break;
+	case DW_OP_GNU_implicit_pointer:
+	  if (cu == NULL)
+	    {
+	      error (0, 0, "%s: DWARF DW_OP_GNU_implicit_pointer shouldn't"
+		     " appear in .debug_frame", dso->filename);
+	      return 1;
+	    }
+	  if (cu->cu_version == 2)
+	    ptr += ptr_size;
+	  else
+	    ptr += 4;
+	  read_uleb128 (ptr);
+	  break;
 	default:
 	  error (0, 0, "%s: Unknown DWARF DW_OP_%d", dso->filename, op);
 	  return 1;
@@ -464,8 +488,8 @@
 }
 
 static int
-adjust_dwarf2_loc (DSO *dso, GElf_Addr offset, GElf_Addr base,
-		   GElf_Addr start, GElf_Addr adjust)
+adjust_dwarf2_loc (DSO *dso, struct cu_data *cu, GElf_Addr offset,
+		   GElf_Addr base, GElf_Addr start, GElf_Addr adjust)
 {
   unsigned char *ptr, *endsec;
   GElf_Addr low, high;
@@ -508,7 +532,7 @@
       len = read_16 (ptr);
       assert (ptr + len <= endsec);
 
-      if (adjust_location_list (dso, ptr, len, start, adjust))
+      if (adjust_location_list (dso, cu, ptr, len, start, adjust))
 	return 1;
 
       ptr += len;
@@ -568,7 +592,7 @@
 		  }
 		else
 		  {
-		    if (adjust_dwarf2_loc (dso, addr, base, start, adjust))
+		    if (adjust_dwarf2_loc (dso, cu, addr, base, start, adjust))
 		      return NULL;
 		  }
 	      }
@@ -682,7 +706,7 @@
 		case DW_AT_location:
 		case DW_AT_data_member_location:
 		case DW_AT_vtable_elem_location:
-		  if (adjust_location_list (dso, ptr, len, start, adjust))
+		  if (adjust_location_list (dso, cu, ptr, len, start, adjust))
 		    return NULL;
 		  break;
 		default:
@@ -993,7 +1017,7 @@
 	      /* FALLTHROUGH */
 	    case DW_CFA_def_cfa_expression:
 	      len = read_uleb128 (ptr);
-	      if (adjust_location_list (dso, ptr, len, start, adjust))
+	      if (adjust_location_list (dso, NULL, ptr, len, start, adjust))
 		return 1;
 	      ptr += len;
 	      break;
Index: prelink/src/dwarf2.h
===================================================================
--- prelink/src/dwarf2.h	(revision 186)
+++ prelink/src/dwarf2.h	(revision 187)
@@ -388,6 +388,7 @@
 #define DW_OP_GNU_push_tls_address	0xe0
 #define DW_OP_GNU_uninit		0xf0
 #define DW_OP_GNU_encoded_addr		0xf1
+#define DW_OP_GNU_implicit_pointer	0xf2
 #define DW_OP_lo_user			0xe0
 #define DW_OP_hi_user			0xff
 
